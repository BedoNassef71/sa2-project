version: '3.8'

services:
  client:
    build: ./client
    container_name: client-container
    stdin_open: true
    ports:
      - "3000:3000"
    networks:
      - ecommerce-app
    volumes:
      - ./client:/app
      - /app/node_modules

  cart-service:
    restart: always
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    networks:
      - ecommerce-app
    volumes:
      - ./cart-service:/code/cart-service
    depends_on:
      - cart-mongodb
    environment:
      MONGO_HOST: cart-mongodb

  cart-mongodb:
    image: mongo
    container_name: cart-mongodb
    ports:
      - "27017:27017"
    networks:
      - ecommerce-app
    volumes:
      - cart_mongodb_data:/data/db

  category-service:
    restart: always
    build:
      context: ./category-service
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    networks:
      - ecommerce-app
    volumes:
      - ./category-service:/code/category-service
    depends_on:
      - category-mongodb
    environment:
      MONGO_HOST: category-mongodb

  category-mongodb:
    image: mongo
    container_name: category-mongodb
    ports:
      - "27018:27017"
    networks:
      - ecommerce-app
    volumes:
      - category_mongodb_data:/data/db

  postgres:
    image: postgres:13.1
    container_name: users-postgres-db
    restart: always
    environment:
      POSTGRES_USER: bedo
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: users-db
    volumes:
      - users_postgres_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ecommerce-app

  adminer:
    image: adminer
    container_name: users-service-db-connection-adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - ecommerce-app

  users-service:
    build:
      context: ./users-service
      dockerfile: Dockerfile
    container_name: users-service-container
    restart: always
    ports:
      - "3001:3000"
    networks:
      - ecommerce-app
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: bedo
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: users-db
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432

  products_service:
    build: ./products_service
    container_name: products_service_container
    ports:
      - "5001:5001"
    networks:
      - ecommerce-app
    links:
      - products-mongodb
    restart: on-failure
    depends_on:
      - products-mongodb
    volumes:
      - ./products_service:/app
      - /app/node_modules
  products-mongodb:
    image: mongo
    ports:
      - "27019:27017"
    networks:
      - ecommerce-app
    volumes:
      - products-volume:/data/db
  weather_service:
    build: ./weather_service
    container_name: weather_service_container
    ports:
      - "5002:5002"
    networks:
      - ecommerce-app
    volumes:
      - ./weather_service:/app
      - /app/node_modules
  
networks:
  ecommerce-app:

volumes:
  cart_mongodb_data:
  category_mongodb_data:
  users_postgres_db_data:
  products-volume:
    driver: local
